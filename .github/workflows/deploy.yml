name: Deploy to Google Artifact Registry

on:
  push:
    branches:
      - main
  issue_comment:
    types: [created]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: <YOUR_REGION>
  REPO_NAME: chatgpt-retrieval-plugin
  IMAGE_NAME: my-image

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tf_plan: ${{ steps.tf_plan.outputs.tf_output }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: tf_plan
        run: |
          output=$(terraform plan -no-color)
          echo "::set-output name=tf_output::$output"

      - name: Post Terraform Plan to PR
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Terraform Plan:\n${{ steps.tf_plan.outputs.tf_output }}`
            })

  apply:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'run apply') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
